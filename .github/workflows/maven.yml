# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - name: Build with Maven
      run: mvn clean package -Dmaven.test.skip=true

#    - uses: mr-smithers-excellent/docker-build-push@v5
#      name: Build & push Docker image
#      with:
#        image: tanmoy/demostar
#        tags: latest
#        registry: docker.io
#        dockerfile: Dockerfile
#        username: ${{ secrets.DOCKER_HUB_USERNAME }}
#        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#    
#
#    - name: Run Trivy vulnerability scanner
#      uses: aquasecurity/trivy-action@master
#      with:
#        image-ref: 'docker.io/tanmoy/demostar:latest'
#        format: 'table'
#        exit-code: '0'
#        vuln-type: 'os,library'
#        severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
#        
    - name: Build an image from Dockerfile
      run: |
        docker build -t docker.io/tanmoy/demostar:latest .
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'docker.io/tanmoy/demostar:latest'
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-results.sarif'
        vuln-type: 'os,library'
        severity: 'HIGH,CRITICAL'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      if: always() 
      with:
        sarif_file: 'trivy-results.sarif'